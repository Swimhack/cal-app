version: '3.8'

services:
  cal-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: calendar-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CLOUD_API_KEY=${GOOGLE_CLOUD_API_KEY}
    restart: unless-stopped
    networks:
      - cal-app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  cal-app-network:
    driver: bridge

# For production deployment with reverse proxy
---
version: '3.8'

services:
  cal-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: calendar-app-prod
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CLOUD_API_KEY=${GOOGLE_CLOUD_API_KEY}
    restart: unless-stopped
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cal-app.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.cal-app.tls=true"
      - "traefik.http.routers.cal-app.tls.certresolver=lets-encrypt"
      - "traefik.http.services.cal-app.loadbalancer.server.port=3000"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.lets-encrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.lets-encrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.lets-encrypt.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme.json:/acme.json"
    networks:
      - traefik-network
    restart: unless-stopped

networks:
  traefik-network:
    external: true